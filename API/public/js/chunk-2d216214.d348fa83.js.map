{"version":3,"sources":["webpack:///./node_modules/dompurify/dist/purify.js"],"names":["global","factory","module","exports","this","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","hasOwnProperty","Object","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","create","_ref","Reflect","apply","construct","fun","thisValue","args","x","Func","Function","prototype","bind","concat","arrayForEach","unapply","forEach","arrayPop","pop","arrayPush","push","stringToLowerCase","String","toLowerCase","stringMatch","match","stringReplace","replace","stringIndexOf","indexOf","stringTrim","trim","regExpTest","RegExp","test","typeErrorCreate","unconstruct","TypeError","func","thisArg","_len","arguments","_key","_len2","_key2","addToSet","set","array","l","element","lcElement","clone","object","newObject","property","lookupGetter","prop","desc","get","value","fallbackValue","console","warn","html","svg","svgFilters","svgDisallowed","mathMl","mathMlDisallowed","text","html$1","svg$1","mathMl$1","xml","MUSTACHE_EXPR","ERB_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","_typeof","Symbol","iterator","obj","constructor","_toConsumableArray$1","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","document","createPolicy","suffix","ATTR_NAME","currentScript","hasAttribute","getAttribute","policyName","createHTML","html$$1","_","createDOMPurify","undefined","DOMPurify","root","version","removed","nodeType","isSupported","originalDocument","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","_window$NamedNodeMap","NamedNodeMap","MozNamedAttrMap","Text","Comment","DOMParser","ElementPrototype","cloneNode","getNextSibling","getChildNodes","getParentNode","template","createElement","content","ownerDocument","trustedTypesPolicy","emptyHTML","RETURN_TRUSTED_TYPE","_document","implementation","createNodeIterator","getElementsByTagName","createDocumentFragment","importNode","documentMode","hooks","createHTMLDocument","MUSTACHE_EXPR$$1","ERB_EXPR$$1","DATA_ATTR$$1","ARIA_ATTR$$1","IS_SCRIPT_OR_DATA$$1","ATTR_WHITESPACE$$1","IS_ALLOWED_URI$$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_DOM_IMPORT","SANITIZE_DOM","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","CONFIG","formElement","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","_checkValidNamespace","parent","tagName","namespaceURI","parentTagName","Boolean","commonSvgAndHTMLElements","_forceRemove","node","parentNode","removeChild","outerHTML","remove","_removeAttribute","name","attribute","getAttributeNode","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","_doc","body","firstElementChild","insertBefore","createTextNode","childNodes","call","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","FILTER_ACCEPT","_isClobbered","elm","nodeName","textContent","attributes","_isNode","_executeHook","entryPoint","currentNode","data","hook","_sanitizeElements","allowedTags","innerHTML","childCount","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","attr","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","_attr","forceKeepAttr","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","oldNode","returnNode","toString","toStaticHTML","appendChild","firstChild","nodeIterator","serializedHTML","setConfig","clearConfig","isValidAttribute","tag","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","purify"],"mappings":"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","file":"js/chunk-2d216214.d348fa83.js","sourcesContent":["/*! @license DOMPurify | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.2.2/LICENSE */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.DOMPurify = factory());\n}(this, function () { 'use strict';\n\n  function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n  var hasOwnProperty = Object.hasOwnProperty,\n      setPrototypeOf = Object.setPrototypeOf,\n      isFrozen = Object.isFrozen,\n      getPrototypeOf = Object.getPrototypeOf,\n      getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n  var freeze = Object.freeze,\n      seal = Object.seal,\n      create = Object.create; // eslint-disable-line import/no-mutable-exports\n\n  var _ref = typeof Reflect !== 'undefined' && Reflect,\n      apply = _ref.apply,\n      construct = _ref.construct;\n\n  if (!apply) {\n    apply = function apply(fun, thisValue, args) {\n      return fun.apply(thisValue, args);\n    };\n  }\n\n  if (!freeze) {\n    freeze = function freeze(x) {\n      return x;\n    };\n  }\n\n  if (!seal) {\n    seal = function seal(x) {\n      return x;\n    };\n  }\n\n  if (!construct) {\n    construct = function construct(Func, args) {\n      return new (Function.prototype.bind.apply(Func, [null].concat(_toConsumableArray(args))))();\n    };\n  }\n\n  var arrayForEach = unapply(Array.prototype.forEach);\n  var arrayPop = unapply(Array.prototype.pop);\n  var arrayPush = unapply(Array.prototype.push);\n\n  var stringToLowerCase = unapply(String.prototype.toLowerCase);\n  var stringMatch = unapply(String.prototype.match);\n  var stringReplace = unapply(String.prototype.replace);\n  var stringIndexOf = unapply(String.prototype.indexOf);\n  var stringTrim = unapply(String.prototype.trim);\n\n  var regExpTest = unapply(RegExp.prototype.test);\n\n  var typeErrorCreate = unconstruct(TypeError);\n\n  function unapply(func) {\n    return function (thisArg) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return apply(func, thisArg, args);\n    };\n  }\n\n  function unconstruct(func) {\n    return function () {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return construct(func, args);\n    };\n  }\n\n  /* Add properties to a lookup table */\n  function addToSet(set, array) {\n    if (setPrototypeOf) {\n      // Make 'in' and truthy checks like Boolean(set.constructor)\n      // independent of any properties defined on Object.prototype.\n      // Prevent prototype setters from intercepting set as a this value.\n      setPrototypeOf(set, null);\n    }\n\n    var l = array.length;\n    while (l--) {\n      var element = array[l];\n      if (typeof element === 'string') {\n        var lcElement = stringToLowerCase(element);\n        if (lcElement !== element) {\n          // Config presets (e.g. tags.js, attrs.js) are immutable.\n          if (!isFrozen(array)) {\n            array[l] = lcElement;\n          }\n\n          element = lcElement;\n        }\n      }\n\n      set[element] = true;\n    }\n\n    return set;\n  }\n\n  /* Shallow clone an object */\n  function clone(object) {\n    var newObject = create(null);\n\n    var property = void 0;\n    for (property in object) {\n      if (apply(hasOwnProperty, object, [property])) {\n        newObject[property] = object[property];\n      }\n    }\n\n    return newObject;\n  }\n\n  /* IE10 doesn't support __lookupGetter__ so lets'\n   * simulate it. It also automatically checks\n   * if the prop is function or getter and behaves\n   * accordingly. */\n  function lookupGetter(object, prop) {\n    while (object !== null) {\n      var desc = getOwnPropertyDescriptor(object, prop);\n      if (desc) {\n        if (desc.get) {\n          return unapply(desc.get);\n        }\n\n        if (typeof desc.value === 'function') {\n          return unapply(desc.value);\n        }\n      }\n\n      object = getPrototypeOf(object);\n    }\n\n    function fallbackValue(element) {\n      console.warn('fallback value for', element);\n      return null;\n    }\n\n    return fallbackValue;\n  }\n\n  var html = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n\n  // SVG\n  var svg = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\n\n  var svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n\n  // List of SVG elements that are disallowed by default.\n  // We still need to know them so that we can do namespace\n  // checks properly in case one wants to add them to\n  // allow-list.\n  var svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'fedropshadow', 'feimage', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\n\n  var mathMl = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover']);\n\n  // Similarly to SVG, we want to know all MathML elements,\n  // even those that we disallow by default.\n  var mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\n\n  var text = freeze(['#text']);\n\n  var html$1 = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns']);\n\n  var svg$1 = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n\n  var mathMl$1 = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n\n  var xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n  // eslint-disable-next-line unicorn/better-regex\n  var MUSTACHE_EXPR = seal(/\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n  var ERB_EXPR = seal(/<%[\\s\\S]*|[\\s\\S]*%>/gm);\n  var DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\n  var ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n  var IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n  );\n  var IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\n  var ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n  );\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n  function _toConsumableArray$1(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n  var getGlobal = function getGlobal() {\n    return typeof window === 'undefined' ? null : window;\n  };\n\n  /**\n   * Creates a no-op policy for internal use only.\n   * Don't export this function outside this module!\n   * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n   * @param {Document} document The document object (to determine policy name suffix)\n   * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n   * are not supported).\n   */\n  var _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, document) {\n    if ((typeof trustedTypes === 'undefined' ? 'undefined' : _typeof(trustedTypes)) !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n      return null;\n    }\n\n    // Allow the callers to control the unique policy name\n    // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n    // Policy creation with duplicate names throws in Trusted Types.\n    var suffix = null;\n    var ATTR_NAME = 'data-tt-policy-suffix';\n    if (document.currentScript && document.currentScript.hasAttribute(ATTR_NAME)) {\n      suffix = document.currentScript.getAttribute(ATTR_NAME);\n    }\n\n    var policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n    try {\n      return trustedTypes.createPolicy(policyName, {\n        createHTML: function createHTML(html$$1) {\n          return html$$1;\n        }\n      });\n    } catch (_) {\n      // Policy creation failed (most likely another DOMPurify script has\n      // already run). Skip creating the policy, as this will only cause errors\n      // if TT are enforced.\n      console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n      return null;\n    }\n  };\n\n  function createDOMPurify() {\n    var window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n\n    var DOMPurify = function DOMPurify(root) {\n      return createDOMPurify(root);\n    };\n\n    /**\n     * Version label, exposed for easier checks\n     * if DOMPurify is up to date or not\n     */\n    DOMPurify.version = '2.2.7';\n\n    /**\n     * Array of elements that DOMPurify removed during sanitation.\n     * Empty if nothing was removed.\n     */\n    DOMPurify.removed = [];\n\n    if (!window || !window.document || window.document.nodeType !== 9) {\n      // Not running in a browser, provide a factory function\n      // so that you can pass your own Window\n      DOMPurify.isSupported = false;\n\n      return DOMPurify;\n    }\n\n    var originalDocument = window.document;\n\n    var document = window.document;\n    var DocumentFragment = window.DocumentFragment,\n        HTMLTemplateElement = window.HTMLTemplateElement,\n        Node = window.Node,\n        Element = window.Element,\n        NodeFilter = window.NodeFilter,\n        _window$NamedNodeMap = window.NamedNodeMap,\n        NamedNodeMap = _window$NamedNodeMap === undefined ? window.NamedNodeMap || window.MozNamedAttrMap : _window$NamedNodeMap,\n        Text = window.Text,\n        Comment = window.Comment,\n        DOMParser = window.DOMParser,\n        trustedTypes = window.trustedTypes;\n\n\n    var ElementPrototype = Element.prototype;\n\n    var cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n    var getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n    var getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n    var getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n    // As per issue #47, the web-components registry is inherited by a\n    // new document created via createHTMLDocument. As per the spec\n    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n    // a new empty registry is used when creating a template contents owner\n    // document, so we use that as our parent document to ensure nothing\n    // is inherited.\n    if (typeof HTMLTemplateElement === 'function') {\n      var template = document.createElement('template');\n      if (template.content && template.content.ownerDocument) {\n        document = template.content.ownerDocument;\n      }\n    }\n\n    var trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, originalDocument);\n    var emptyHTML = trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML('') : '';\n\n    var _document = document,\n        implementation = _document.implementation,\n        createNodeIterator = _document.createNodeIterator,\n        getElementsByTagName = _document.getElementsByTagName,\n        createDocumentFragment = _document.createDocumentFragment;\n    var importNode = originalDocument.importNode;\n\n\n    var documentMode = {};\n    try {\n      documentMode = clone(document).documentMode ? document.documentMode : {};\n    } catch (_) {}\n\n    var hooks = {};\n\n    /**\n     * Expose whether this browser supports running the full DOMPurify.\n     */\n    DOMPurify.isSupported = typeof getParentNode === 'function' && implementation && typeof implementation.createHTMLDocument !== 'undefined' && documentMode !== 9;\n\n    var MUSTACHE_EXPR$$1 = MUSTACHE_EXPR,\n        ERB_EXPR$$1 = ERB_EXPR,\n        DATA_ATTR$$1 = DATA_ATTR,\n        ARIA_ATTR$$1 = ARIA_ATTR,\n        IS_SCRIPT_OR_DATA$$1 = IS_SCRIPT_OR_DATA,\n        ATTR_WHITESPACE$$1 = ATTR_WHITESPACE;\n    var IS_ALLOWED_URI$$1 = IS_ALLOWED_URI;\n\n    /**\n     * We consider the elements and attributes below to be safe. Ideally\n     * don't add any new ones but feel free to remove unwanted ones.\n     */\n\n    /* allowed element names */\n\n    var ALLOWED_TAGS = null;\n    var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(html), _toConsumableArray$1(svg), _toConsumableArray$1(svgFilters), _toConsumableArray$1(mathMl), _toConsumableArray$1(text)));\n\n    /* Allowed attribute names */\n    var ALLOWED_ATTR = null;\n    var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray$1(html$1), _toConsumableArray$1(svg$1), _toConsumableArray$1(mathMl$1), _toConsumableArray$1(xml)));\n\n    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n    var FORBID_TAGS = null;\n\n    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n    var FORBID_ATTR = null;\n\n    /* Decide if ARIA attributes are okay */\n    var ALLOW_ARIA_ATTR = true;\n\n    /* Decide if custom data attributes are okay */\n    var ALLOW_DATA_ATTR = true;\n\n    /* Decide if unknown protocols are okay */\n    var ALLOW_UNKNOWN_PROTOCOLS = false;\n\n    /* Output should be safe for common template engines.\n     * This means, DOMPurify removes data attributes, mustaches and ERB\n     */\n    var SAFE_FOR_TEMPLATES = false;\n\n    /* Decide if document with <html>... should be returned */\n    var WHOLE_DOCUMENT = false;\n\n    /* Track whether config is already set on this instance of DOMPurify. */\n    var SET_CONFIG = false;\n\n    /* Decide if all elements (e.g. style, script) must be children of\n     * document.body. By default, browsers might move them to document.head */\n    var FORCE_BODY = false;\n\n    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n     * string (or a TrustedHTML object if Trusted Types are supported).\n     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n     */\n    var RETURN_DOM = false;\n\n    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n     * string  (or a TrustedHTML object if Trusted Types are supported) */\n    var RETURN_DOM_FRAGMENT = false;\n\n    /* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM\n     * `Node` is imported into the current `Document`. If this flag is not enabled the\n     * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by\n     * DOMPurify.\n     *\n     * This defaults to `true` starting DOMPurify 2.2.0. Note that setting it to `false`\n     * might cause XSS from attacks hidden in closed shadowroots in case the browser\n     * supports Declarative Shadow: DOM https://web.dev/declarative-shadow-dom/\n     */\n    var RETURN_DOM_IMPORT = true;\n\n    /* Try to return a Trusted Type object instead of a string, return a string in\n     * case Trusted Types are not supported  */\n    var RETURN_TRUSTED_TYPE = false;\n\n    /* Output should be free from DOM clobbering attacks? */\n    var SANITIZE_DOM = true;\n\n    /* Keep element content when removing element? */\n    var KEEP_CONTENT = true;\n\n    /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n     * of importing it into a new Document and returning a sanitized copy */\n    var IN_PLACE = false;\n\n    /* Allow usage of profiles like html, svg and mathMl */\n    var USE_PROFILES = {};\n\n    /* Tags to ignore content of when KEEP_CONTENT is true */\n    var FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n\n    /* Tags that are safe for data: URIs */\n    var DATA_URI_TAGS = null;\n    var DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n\n    /* Attributes safe for values like \"javascript:\" */\n    var URI_SAFE_ATTRIBUTES = null;\n    var DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'summary', 'title', 'value', 'style', 'xmlns']);\n\n    /* Keep a reference to config to pass to hooks */\n    var CONFIG = null;\n\n    /* Ideally, do not touch anything below this line */\n    /* ______________________________________________ */\n\n    var formElement = document.createElement('form');\n\n    /**\n     * _parseConfig\n     *\n     * @param  {Object} cfg optional config literal\n     */\n    // eslint-disable-next-line complexity\n    var _parseConfig = function _parseConfig(cfg) {\n      if (CONFIG && CONFIG === cfg) {\n        return;\n      }\n\n      /* Shield configuration object from tampering */\n      if (!cfg || (typeof cfg === 'undefined' ? 'undefined' : _typeof(cfg)) !== 'object') {\n        cfg = {};\n      }\n\n      /* Shield configuration object from prototype pollution */\n      cfg = clone(cfg);\n\n      /* Set configuration parameters */\n      ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS) : DEFAULT_ALLOWED_TAGS;\n      ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR) : DEFAULT_ALLOWED_ATTR;\n      URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR) : DEFAULT_URI_SAFE_ATTRIBUTES;\n      DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS) : DEFAULT_DATA_URI_TAGS;\n      FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};\n      FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};\n      USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n      ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n      ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n      ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n      SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n      WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n      RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n      RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n      RETURN_DOM_IMPORT = cfg.RETURN_DOM_IMPORT !== false; // Default true\n      RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n      FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n      SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n      KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n      IN_PLACE = cfg.IN_PLACE || false; // Default false\n      IS_ALLOWED_URI$$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$$1;\n      if (SAFE_FOR_TEMPLATES) {\n        ALLOW_DATA_ATTR = false;\n      }\n\n      if (RETURN_DOM_FRAGMENT) {\n        RETURN_DOM = true;\n      }\n\n      /* Parse profile info */\n      if (USE_PROFILES) {\n        ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(text)));\n        ALLOWED_ATTR = [];\n        if (USE_PROFILES.html === true) {\n          addToSet(ALLOWED_TAGS, html);\n          addToSet(ALLOWED_ATTR, html$1);\n        }\n\n        if (USE_PROFILES.svg === true) {\n          addToSet(ALLOWED_TAGS, svg);\n          addToSet(ALLOWED_ATTR, svg$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.svgFilters === true) {\n          addToSet(ALLOWED_TAGS, svgFilters);\n          addToSet(ALLOWED_ATTR, svg$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.mathMl === true) {\n          addToSet(ALLOWED_TAGS, mathMl);\n          addToSet(ALLOWED_ATTR, mathMl$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n      }\n\n      /* Merge configuration parameters */\n      if (cfg.ADD_TAGS) {\n        if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n          ALLOWED_TAGS = clone(ALLOWED_TAGS);\n        }\n\n        addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n      }\n\n      if (cfg.ADD_ATTR) {\n        if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n          ALLOWED_ATTR = clone(ALLOWED_ATTR);\n        }\n\n        addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n      }\n\n      if (cfg.ADD_URI_SAFE_ATTR) {\n        addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n      }\n\n      /* Add #text in case KEEP_CONTENT is set to true */\n      if (KEEP_CONTENT) {\n        ALLOWED_TAGS['#text'] = true;\n      }\n\n      /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n      if (WHOLE_DOCUMENT) {\n        addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n      }\n\n      /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n      if (ALLOWED_TAGS.table) {\n        addToSet(ALLOWED_TAGS, ['tbody']);\n        delete FORBID_TAGS.tbody;\n      }\n\n      // Prevent further manipulation of configuration.\n      // Not available in IE8, Safari 5, etc.\n      if (freeze) {\n        freeze(cfg);\n      }\n\n      CONFIG = cfg;\n    };\n\n    var MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n\n    var HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'desc', 'title', 'annotation-xml']);\n\n    /* Keep track of all possible SVG and MathML tags\n     * so that we can perform the namespace checks\n     * correctly. */\n    var ALL_SVG_TAGS = addToSet({}, svg);\n    addToSet(ALL_SVG_TAGS, svgFilters);\n    addToSet(ALL_SVG_TAGS, svgDisallowed);\n\n    var ALL_MATHML_TAGS = addToSet({}, mathMl);\n    addToSet(ALL_MATHML_TAGS, mathMlDisallowed);\n\n    var MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n    var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n    var HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n\n    /**\n     *\n     *\n     * @param  {Element} element a DOM element whose namespace is being checked\n     * @returns {boolean} Return false if the element has a\n     *  namespace that a spec-compliant parser would never\n     *  return. Return true otherwise.\n     */\n    var _checkValidNamespace = function _checkValidNamespace(element) {\n      var parent = getParentNode(element);\n\n      // In JSDOM, if we're inside shadow DOM, then parentNode\n      // can be null. We just simulate parent in this case.\n      if (!parent || !parent.tagName) {\n        parent = {\n          namespaceURI: HTML_NAMESPACE,\n          tagName: 'template'\n        };\n      }\n\n      var tagName = stringToLowerCase(element.tagName);\n      var parentTagName = stringToLowerCase(parent.tagName);\n\n      if (element.namespaceURI === SVG_NAMESPACE) {\n        // The only way to switch from HTML namespace to SVG\n        // is via <svg>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'svg';\n        }\n\n        // The only way to switch from MathML to SVG is via\n        // svg if parent is either <annotation-xml> or MathML\n        // text integration points.\n        if (parent.namespaceURI === MATHML_NAMESPACE) {\n          return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n        }\n\n        // We only allow elements that are defined in SVG\n        // spec. All others are disallowed in SVG namespace.\n        return Boolean(ALL_SVG_TAGS[tagName]);\n      }\n\n      if (element.namespaceURI === MATHML_NAMESPACE) {\n        // The only way to switch from HTML namespace to MathML\n        // is via <math>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'math';\n        }\n\n        // The only way to switch from SVG to MathML is via\n        // <math> and HTML integration points\n        if (parent.namespaceURI === SVG_NAMESPACE) {\n          return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n        }\n\n        // We only allow elements that are defined in MathML\n        // spec. All others are disallowed in MathML namespace.\n        return Boolean(ALL_MATHML_TAGS[tagName]);\n      }\n\n      if (element.namespaceURI === HTML_NAMESPACE) {\n        // The only way to switch from SVG to HTML is via\n        // HTML integration points, and from MathML to HTML\n        // is via MathML text integration points\n        if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n\n        if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n\n        // Certain elements are allowed in both SVG and HTML\n        // namespace. We need to specify them explicitly\n        // so that they don't get erronously deleted from\n        // HTML namespace.\n        var commonSvgAndHTMLElements = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n\n        // We disallow tags that are specific for MathML\n        // or SVG and should never appear in HTML namespace\n        return !ALL_MATHML_TAGS[tagName] && (commonSvgAndHTMLElements[tagName] || !ALL_SVG_TAGS[tagName]);\n      }\n\n      // The code should never reach this place (this means\n      // that the element somehow got namespace that is not\n      // HTML, SVG or MathML). Return false just in case.\n      return false;\n    };\n\n    /**\n     * _forceRemove\n     *\n     * @param  {Node} node a DOM node\n     */\n    var _forceRemove = function _forceRemove(node) {\n      arrayPush(DOMPurify.removed, { element: node });\n      try {\n        node.parentNode.removeChild(node);\n      } catch (_) {\n        try {\n          node.outerHTML = emptyHTML;\n        } catch (_) {\n          node.remove();\n        }\n      }\n    };\n\n    /**\n     * _removeAttribute\n     *\n     * @param  {String} name an Attribute name\n     * @param  {Node} node a DOM node\n     */\n    var _removeAttribute = function _removeAttribute(name, node) {\n      try {\n        arrayPush(DOMPurify.removed, {\n          attribute: node.getAttributeNode(name),\n          from: node\n        });\n      } catch (_) {\n        arrayPush(DOMPurify.removed, {\n          attribute: null,\n          from: node\n        });\n      }\n\n      node.removeAttribute(name);\n\n      // We void attribute values for unremovable \"is\"\" attributes\n      if (name === 'is' && !ALLOWED_ATTR[name]) {\n        if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n          try {\n            _forceRemove(node);\n          } catch (_) {}\n        } else {\n          try {\n            node.setAttribute(name, '');\n          } catch (_) {}\n        }\n      }\n    };\n\n    /**\n     * _initDocument\n     *\n     * @param  {String} dirty a string of dirty markup\n     * @return {Document} a DOM, filled with the dirty markup\n     */\n    var _initDocument = function _initDocument(dirty) {\n      /* Create a HTML document */\n      var doc = void 0;\n      var leadingWhitespace = void 0;\n\n      if (FORCE_BODY) {\n        dirty = '<remove></remove>' + dirty;\n      } else {\n        /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n        var matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n        leadingWhitespace = matches && matches[0];\n      }\n\n      var dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      /* Use the DOMParser API by default, fallback later if needs be */\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, 'text/html');\n      } catch (_) {}\n\n      /* Use createHTMLDocument in case DOMParser is not available */\n      if (!doc || !doc.documentElement) {\n        doc = implementation.createHTMLDocument('');\n        var _doc = doc,\n            body = _doc.body;\n\n        body.parentNode.removeChild(body.parentNode.firstElementChild);\n        body.outerHTML = dirtyPayload;\n      }\n\n      if (dirty && leadingWhitespace) {\n        doc.body.insertBefore(document.createTextNode(leadingWhitespace), doc.body.childNodes[0] || null);\n      }\n\n      /* Work on whole document or just its body */\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    };\n\n    /**\n     * _createIterator\n     *\n     * @param  {Document} root document/fragment to create iterator for\n     * @return {Iterator} iterator instance\n     */\n    var _createIterator = function _createIterator(root) {\n      return createNodeIterator.call(root.ownerDocument || root, root, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, function () {\n        return NodeFilter.FILTER_ACCEPT;\n      }, false);\n    };\n\n    /**\n     * _isClobbered\n     *\n     * @param  {Node} elm element to check for clobbering attacks\n     * @return {Boolean} true if clobbered, false if safe\n     */\n    var _isClobbered = function _isClobbered(elm) {\n      if (elm instanceof Text || elm instanceof Comment) {\n        return false;\n      }\n\n      if (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function') {\n        return true;\n      }\n\n      return false;\n    };\n\n    /**\n     * _isNode\n     *\n     * @param  {Node} obj object to check whether it's a DOM node\n     * @return {Boolean} true is object is a DOM node\n     */\n    var _isNode = function _isNode(object) {\n      return (typeof Node === 'undefined' ? 'undefined' : _typeof(Node)) === 'object' ? object instanceof Node : object && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string';\n    };\n\n    /**\n     * _executeHook\n     * Execute user configurable hooks\n     *\n     * @param  {String} entryPoint  Name of the hook's entry point\n     * @param  {Node} currentNode node to work on with the hook\n     * @param  {Object} data additional hook parameters\n     */\n    var _executeHook = function _executeHook(entryPoint, currentNode, data) {\n      if (!hooks[entryPoint]) {\n        return;\n      }\n\n      arrayForEach(hooks[entryPoint], function (hook) {\n        hook.call(DOMPurify, currentNode, data, CONFIG);\n      });\n    };\n\n    /**\n     * _sanitizeElements\n     *\n     * @protect nodeName\n     * @protect textContent\n     * @protect removeChild\n     *\n     * @param   {Node} currentNode to check for permission to exist\n     * @return  {Boolean} true if node was killed, false if left alive\n     */\n    var _sanitizeElements = function _sanitizeElements(currentNode) {\n      var content = void 0;\n\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeElements', currentNode, null);\n\n      /* Check if element is clobbered or can clobber */\n      if (_isClobbered(currentNode)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Check if tagname contains Unicode */\n      if (stringMatch(currentNode.nodeName, /[\\u0080-\\uFFFF]/)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Now let's check the element's type and name */\n      var tagName = stringToLowerCase(currentNode.nodeName);\n\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeElement', currentNode, {\n        tagName: tagName,\n        allowedTags: ALLOWED_TAGS\n      });\n\n      /* Detect mXSS attempts abusing namespace confusion */\n      if (!_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Remove element if anything forbids its presence */\n      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n        /* Keep content except for bad-listed elements */\n        if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n          var parentNode = getParentNode(currentNode);\n          var childNodes = getChildNodes(currentNode);\n\n          if (childNodes && parentNode) {\n            var childCount = childNodes.length;\n\n            for (var i = childCount - 1; i >= 0; --i) {\n              parentNode.insertBefore(cloneNode(childNodes[i], true), getNextSibling(currentNode));\n            }\n          }\n        }\n\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Check whether element has a valid namespace */\n      if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      if ((tagName === 'noscript' || tagName === 'noembed') && regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Sanitize element content to be template-safe */\n      if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n        /* Get the element's text content */\n        content = currentNode.textContent;\n        content = stringReplace(content, MUSTACHE_EXPR$$1, ' ');\n        content = stringReplace(content, ERB_EXPR$$1, ' ');\n        if (currentNode.textContent !== content) {\n          arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n          currentNode.textContent = content;\n        }\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeElements', currentNode, null);\n\n      return false;\n    };\n\n    /**\n     * _isValidAttribute\n     *\n     * @param  {string} lcTag Lowercase tag name of containing element.\n     * @param  {string} lcName Lowercase attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid, otherwise false.\n     */\n    // eslint-disable-next-line complexity\n    var _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n      /* Make sure attribute cannot clobber */\n      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n        return false;\n      }\n\n      /* Allow valid data-* attributes: At least one character after \"-\"\n          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n          We don't need to check the value; it's always URI safe. */\n      if (ALLOW_DATA_ATTR && regExpTest(DATA_ATTR$$1, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR$$1, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n        return false;\n\n        /* Check value is safe. First, is attr inert? If so, is safe */\n      } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ; else if (!value) ; else {\n        return false;\n      }\n\n      return true;\n    };\n\n    /**\n     * _sanitizeAttributes\n     *\n     * @protect attributes\n     * @protect nodeName\n     * @protect removeAttribute\n     * @protect setAttribute\n     *\n     * @param  {Node} currentNode to sanitize\n     */\n    var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n      var attr = void 0;\n      var value = void 0;\n      var lcName = void 0;\n      var l = void 0;\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n      var attributes = currentNode.attributes;\n\n      /* Check if we have attributes; if not we might have a text node */\n\n      if (!attributes) {\n        return;\n      }\n\n      var hookEvent = {\n        attrName: '',\n        attrValue: '',\n        keepAttr: true,\n        allowedAttributes: ALLOWED_ATTR\n      };\n      l = attributes.length;\n\n      /* Go backwards over all attributes; safely remove bad ones */\n      while (l--) {\n        attr = attributes[l];\n        var _attr = attr,\n            name = _attr.name,\n            namespaceURI = _attr.namespaceURI;\n\n        value = stringTrim(attr.value);\n        lcName = stringToLowerCase(name);\n\n        /* Execute a hook if present */\n        hookEvent.attrName = lcName;\n        hookEvent.attrValue = value;\n        hookEvent.keepAttr = true;\n        hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n        _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n        value = hookEvent.attrValue;\n        /* Did the hooks approve of the attribute? */\n        if (hookEvent.forceKeepAttr) {\n          continue;\n        }\n\n        /* Remove attribute */\n        _removeAttribute(name, currentNode);\n\n        /* Did the hooks approve of the attribute? */\n        if (!hookEvent.keepAttr) {\n          continue;\n        }\n\n        /* Work around a security issue in jQuery 3.0 */\n        if (regExpTest(/\\/>/i, value)) {\n          _removeAttribute(name, currentNode);\n          continue;\n        }\n\n        /* Sanitize attribute content to be template-safe */\n        if (SAFE_FOR_TEMPLATES) {\n          value = stringReplace(value, MUSTACHE_EXPR$$1, ' ');\n          value = stringReplace(value, ERB_EXPR$$1, ' ');\n        }\n\n        /* Is `value` valid for this attribute? */\n        var lcTag = currentNode.nodeName.toLowerCase();\n        if (!_isValidAttribute(lcTag, lcName, value)) {\n          continue;\n        }\n\n        /* Handle invalid data-* attribute set by try-catching it */\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n\n          arrayPop(DOMPurify.removed);\n        } catch (_) {}\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeAttributes', currentNode, null);\n    };\n\n    /**\n     * _sanitizeShadowDOM\n     *\n     * @param  {DocumentFragment} fragment to iterate over recursively\n     */\n    var _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n      var shadowNode = void 0;\n      var shadowIterator = _createIterator(fragment);\n\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n      while (shadowNode = shadowIterator.nextNode()) {\n        /* Execute a hook if present */\n        _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(shadowNode)) {\n          continue;\n        }\n\n        /* Deep shadow DOM detected */\n        if (shadowNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(shadowNode.content);\n        }\n\n        /* Check attributes, sanitize if necessary */\n        _sanitizeAttributes(shadowNode);\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeShadowDOM', fragment, null);\n    };\n\n    /**\n     * Sanitize\n     * Public method providing core sanitation functionality\n     *\n     * @param {String|Node} dirty string or DOM node\n     * @param {Object} configuration object\n     */\n    // eslint-disable-next-line complexity\n    DOMPurify.sanitize = function (dirty, cfg) {\n      var body = void 0;\n      var importedNode = void 0;\n      var currentNode = void 0;\n      var oldNode = void 0;\n      var returnNode = void 0;\n      /* Make sure we have a string to sanitize.\n        DO NOT return early, as this will return the wrong type if\n        the user has requested a DOM object rather than a string */\n      if (!dirty) {\n        dirty = '<!-->';\n      }\n\n      /* Stringify, in case dirty is an object */\n      if (typeof dirty !== 'string' && !_isNode(dirty)) {\n        // eslint-disable-next-line no-negated-condition\n        if (typeof dirty.toString !== 'function') {\n          throw typeErrorCreate('toString is not a function');\n        } else {\n          dirty = dirty.toString();\n          if (typeof dirty !== 'string') {\n            throw typeErrorCreate('dirty is not a string, aborting');\n          }\n        }\n      }\n\n      /* Check we can run. Otherwise fall back or ignore */\n      if (!DOMPurify.isSupported) {\n        if (_typeof(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {\n          if (typeof dirty === 'string') {\n            return window.toStaticHTML(dirty);\n          }\n\n          if (_isNode(dirty)) {\n            return window.toStaticHTML(dirty.outerHTML);\n          }\n        }\n\n        return dirty;\n      }\n\n      /* Assign config vars */\n      if (!SET_CONFIG) {\n        _parseConfig(cfg);\n      }\n\n      /* Clean up removed elements */\n      DOMPurify.removed = [];\n\n      /* Check if dirty is correctly typed for IN_PLACE */\n      if (typeof dirty === 'string') {\n        IN_PLACE = false;\n      }\n\n      if (IN_PLACE) ; else if (dirty instanceof Node) {\n        /* If dirty is a DOM element, append to an empty document to avoid\n           elements being stripped by the parser */\n        body = _initDocument('<!---->');\n        importedNode = body.ownerDocument.importNode(dirty, true);\n        if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n          /* Node is already a body, use as is */\n          body = importedNode;\n        } else if (importedNode.nodeName === 'HTML') {\n          body = importedNode;\n        } else {\n          // eslint-disable-next-line unicorn/prefer-node-append\n          body.appendChild(importedNode);\n        }\n      } else {\n        /* Exit directly if we have nothing to do */\n        if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1) {\n          return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n        }\n\n        /* Initialize the document to work on */\n        body = _initDocument(dirty);\n\n        /* Check we have a DOM node from the data */\n        if (!body) {\n          return RETURN_DOM ? null : emptyHTML;\n        }\n      }\n\n      /* Remove first element node (ours) if FORCE_BODY is set */\n      if (body && FORCE_BODY) {\n        _forceRemove(body.firstChild);\n      }\n\n      /* Get node iterator */\n      var nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n      /* Now start iterating over the created document */\n      while (currentNode = nodeIterator.nextNode()) {\n        /* Fix IE's strange behavior with manipulated textNodes #89 */\n        if (currentNode.nodeType === 3 && currentNode === oldNode) {\n          continue;\n        }\n\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(currentNode)) {\n          continue;\n        }\n\n        /* Shadow DOM detected, sanitize it */\n        if (currentNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(currentNode.content);\n        }\n\n        /* Check attributes, sanitize if necessary */\n        _sanitizeAttributes(currentNode);\n\n        oldNode = currentNode;\n      }\n\n      oldNode = null;\n\n      /* If we sanitized `dirty` in-place, return it. */\n      if (IN_PLACE) {\n        return dirty;\n      }\n\n      /* Return sanitized string or DOM */\n      if (RETURN_DOM) {\n        if (RETURN_DOM_FRAGMENT) {\n          returnNode = createDocumentFragment.call(body.ownerDocument);\n\n          while (body.firstChild) {\n            // eslint-disable-next-line unicorn/prefer-node-append\n            returnNode.appendChild(body.firstChild);\n          }\n        } else {\n          returnNode = body;\n        }\n\n        if (RETURN_DOM_IMPORT) {\n          /*\n            AdoptNode() is not used because internal state is not reset\n            (e.g. the past names map of a HTMLFormElement), this is safe\n            in theory but we would rather not risk another attack vector.\n            The state that is cloned by importNode() is explicitly defined\n            by the specs.\n          */\n          returnNode = importNode.call(originalDocument, returnNode, true);\n        }\n\n        return returnNode;\n      }\n\n      var serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n      /* Sanitize final string template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR$$1, ' ');\n        serializedHTML = stringReplace(serializedHTML, ERB_EXPR$$1, ' ');\n      }\n\n      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n    };\n\n    /**\n     * Public method to set the configuration once\n     * setConfig\n     *\n     * @param {Object} cfg configuration object\n     */\n    DOMPurify.setConfig = function (cfg) {\n      _parseConfig(cfg);\n      SET_CONFIG = true;\n    };\n\n    /**\n     * Public method to remove the configuration\n     * clearConfig\n     *\n     */\n    DOMPurify.clearConfig = function () {\n      CONFIG = null;\n      SET_CONFIG = false;\n    };\n\n    /**\n     * Public method to check if an attribute value is valid.\n     * Uses last set config, if any. Otherwise, uses config defaults.\n     * isValidAttribute\n     *\n     * @param  {string} tag Tag name of containing element.\n     * @param  {string} attr Attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n     */\n    DOMPurify.isValidAttribute = function (tag, attr, value) {\n      /* Initialize shared config vars if necessary. */\n      if (!CONFIG) {\n        _parseConfig({});\n      }\n\n      var lcTag = stringToLowerCase(tag);\n      var lcName = stringToLowerCase(attr);\n      return _isValidAttribute(lcTag, lcName, value);\n    };\n\n    /**\n     * AddHook\n     * Public method to add DOMPurify hooks\n     *\n     * @param {String} entryPoint entry point for the hook to add\n     * @param {Function} hookFunction function to execute\n     */\n    DOMPurify.addHook = function (entryPoint, hookFunction) {\n      if (typeof hookFunction !== 'function') {\n        return;\n      }\n\n      hooks[entryPoint] = hooks[entryPoint] || [];\n      arrayPush(hooks[entryPoint], hookFunction);\n    };\n\n    /**\n     * RemoveHook\n     * Public method to remove a DOMPurify hook at a given entryPoint\n     * (pops it from the stack of hooks if more are present)\n     *\n     * @param {String} entryPoint entry point for the hook to remove\n     */\n    DOMPurify.removeHook = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        arrayPop(hooks[entryPoint]);\n      }\n    };\n\n    /**\n     * RemoveHooks\n     * Public method to remove all DOMPurify hooks at a given entryPoint\n     *\n     * @param  {String} entryPoint entry point for the hooks to remove\n     */\n    DOMPurify.removeHooks = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        hooks[entryPoint] = [];\n      }\n    };\n\n    /**\n     * RemoveAllHooks\n     * Public method to remove all DOMPurify hooks\n     *\n     */\n    DOMPurify.removeAllHooks = function () {\n      hooks = {};\n    };\n\n    return DOMPurify;\n  }\n\n  var purify = createDOMPurify();\n\n  return purify;\n\n}));\n//# sourceMappingURL=purify.js.map\n"],"sourceRoot":""}